[tasks.build]
clear = true
dependencies = ["pack_build", "pack_rename", "pack_resize"]

[tasks.build_arkzkey]
clear = true
dependencies = ["pack_build_arkzkey", "pack_rename", "pack_resize"]

[tasks.build_multithread]
clear = true
dependencies = [
    "pack_build_multithread",
    "post_build_multithread",
    "pack_rename",
    "pack_resize",
]

[tasks.build_multithread_arkzkey]
clear = true
dependencies = [
    "pack_build_multithread_arkzkey",
    "post_build_multithread",
    "pack_rename",
    "pack_resize",
]

[tasks.pack_build]
command = "wasm-pack"
args = ["build", "--release", "--target", "web", "--scope", "waku"]

[tasks.pack_build_arkzkey]
command = "wasm-pack"
args = [
    "build",
    "--release",
    "--target",
    "web",
    "--scope",
    "waku",
    "--features",
    "arkzkey",
]

[tasks.pack_build_multithread]
command = "env"
args = [
    "RUSTFLAGS=-C target-feature=+atomics,+bulk-memory,+mutable-globals",
    "rustup",
    "run",
    "nightly",
    "wasm-pack",
    "build",
    "--release",
    "--target",
    "web",
    "--scope",
    "waku",
    "--features",
    "multithread",
    "-Z",
    "build-std=panic_abort,std",
]

[tasks.pack_build_multithread_arkzkey]
command = "env"
args = [
    "RUSTFLAGS=-C target-feature=+atomics,+bulk-memory,+mutable-globals",
    "rustup",
    "run",
    "nightly",
    "wasm-pack",
    "build",
    "--release",
    "--target",
    "web",
    "--scope",
    "waku",
    "--features",
    "multithread,arkzkey",
    "-Z",
    "build-std=panic_abort,std",
]

[tasks.post_build_multithread]
script = '''
wasm-bindgen --target web --split-linked-modules --out-dir ./pkg ../target/wasm32-unknown-unknown/release/rln_wasm.wasm && \
find ./pkg/snippets -name "workerHelpers.worker.js" -exec sed -i.bak 's|from '\''\.\.\/\.\.\/\.\.\/'\'';|from "../../../rln_wasm.js";|g' {} \; -exec rm -f {}.bak \; && \
find ./pkg/snippets -name "workerHelpers.worker.js" -exec sed -i.bak 's|await initWbg(module, memory);|await initWbg({ module, memory });|g' {} \; -exec rm -f {}.bak \;
'''

[tasks.pack_rename]
script = "sed -i.bak 's/rln-wasm/zerokit-rln-wasm/g' pkg/package.json && rm pkg/package.json.bak"

[tasks.pack_resize]
command = "wasm-opt"
args = [
    "pkg/rln_wasm_bg.wasm",
    "-Oz",
    "--strip-debug",
    "--strip-dwarf",
    "--remove-unused-module-elements",
    "--vacuum",
    "-o",
    "pkg/rln_wasm_bg.wasm",
]

[tasks.test]
command = "wasm-pack"
args = [
    "test",
    "--release",
    "--node",
    "--target",
    "wasm32-unknown-unknown",
    "--",
    "--nocapture",
]
dependencies = ["build"]

[tasks.test_arkzkey]
command = "wasm-pack"
args = [
    "test",
    "--release",
    "--node",
    "--target",
    "wasm32-unknown-unknown",
    "--features",
    "arkzkey",
    "--",
    "--nocapture",
]
dependencies = ["build_arkzkey"]

[tasks.test_browser]
command = "wasm-pack"
args = [
    "test",
    "--release",
    "--chrome",
    # "--firefox",
    # "--safari",
    "--headless",
    "--target",
    "wasm32-unknown-unknown",
    "--",
    "--nocapture",
]
dependencies = ["build"]

[tasks.test_browser_arkzkey]
command = "wasm-pack"
args = [
    "test",
    "--release",
    "--chrome",
    # "--firefox",
    # "--safari",
    "--headless",
    "--target",
    "wasm32-unknown-unknown",
    "--features",
    "arkzkey",
    "--",
    "--nocapture",
]
dependencies = ["build_arkzkey"]

[tasks.test_multithread]
command = "env"
args = [
    "RUSTFLAGS=-C target-feature=+atomics,+bulk-memory,+mutable-globals",
    "rustup",
    "run",
    "nightly",
    "wasm-pack",
    "test",
    "--release",
    "--chrome",
    # "--firefox",
    # "--safari",
    "--headless",
    "--target",
    "wasm32-unknown-unknown",
    "--features",
    "multithread",
    "-Z",
    "build-std=panic_abort,std",
    "--",
    "--nocapture",
]
dependencies = ["build_multithread"]

[tasks.test_multithread_arkzkey]
command = "env"
args = [
    "RUSTFLAGS=-C target-feature=+atomics,+bulk-memory,+mutable-globals",
    "rustup",
    "run",
    "nightly",
    "wasm-pack",
    "test",
    "--release",
    "--chrome",
    # "--firefox",
    # "--safari",
    "--headless",
    "--target",
    "wasm32-unknown-unknown",
    "--features",
    "multithread,arkzkey",
    "-Z",
    "build-std=panic_abort,std",
    "--",
    "--nocapture",
]
dependencies = ["build_multithread_arkzkey"]

[tasks.bench]
disabled = true

[tasks.login]
command = "wasm-pack"
args = ["login"]

[tasks.publish]
command = "wasm-pack"
args = ["publish", "--access", "public", "--target", "web"]
